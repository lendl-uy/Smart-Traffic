if sum(x_curr) <= 0.0:
    u_2mult = max_multiplier*(d_sum[0]/d_total)
    u_3mult = max_multiplier*(d_sum[1]/d_total)
    u_4mult = max_multiplier*(d_sum[2]/d_total)
    u_41multiplier = min(u_2mult, u_3mult, u_4mult, 1)
else:
    if x_curr[0] < x_curr[1]:
        u_2mult = max_multiplier*(x_curr[1]/x_total)
    else:
        u_2mult = max_multiplier*(x_curr[0]/x_total)
    u_3mult = max_multiplier*(x_curr[2]/x_total)
    u_4mult = max_multiplier*(x_curr[3]/x_total)
    u_41multiplier = max_multiplier*(x_curr[4]/x_total)

u_2max = round(u_min_val*u_2mult)
u_3max = round(u_min_val*u_3mult)
u_4max = round(u_min_val*u_4mult)
u_41max = round(u_min_val*u_41multiplier)

m.addConstr(u[k, 0] == u[k, 1]) # Green time of Katipunan Ave North and South must be the same
m.addConstr(u[k, 3] == u_41[k, 0]+u_43[k, 0]) # Aurora East has 2 green times/phases
m.addConstr(u[k, 2] == u_43[k, 0]-u_41[k, 0]-3) # Green time of Aurora West
m.addConstr(C == u[k, 0] + u_41[k, 0] + u[k, 2] + 9) # Total cycle time is equal to phase 1 + phase 2 + phase 3 + lost time

# EXPERIMENTAL
m.addConstr(u_43 >= u_41[k, 0]*u_41mult) # Green time constraint of Aurora East to West
m.addConstr(u[k, 0] >= u_2max) # Green time constraint of Katipunan South and North
m.addConstr(u[k, 2] >= u_3max) # Green time constraint of Aurora West
m.addConstr(u[k, 2] >= u_41[k, 0]) # Green time constraint of Aurora West
m.addConstr(u[k, 3] >= u_4max) # Green time constraint of Aurora East

if u_2max >= u_3max:
    m.addConstr(u[k, 0] >= u[k, 2]) # Green time constraint of Katipunan South and North
else:
    m.addConstr(u[k, 2] >= u[k, 0]) # Green time constraint of Aurora West

if (u_41max <= u_min_val) or (u_2max >= u_4max) or (u_3max >= u_4max):
    m.addConstr(u_41[k, 0] == u_min_val)

curr_best: cmin = 50, cmax = 75, umin = 11, n = 10 (new model v2)

test 1: cmin = 50, cmax = 70, umin = 15, n = 5
test 2: cmin = 50, cmax = 80, umin = 15, n = 5
test 3: cmin = 50, cmax = 90, umin = 15, n = 5
test 4: cmin = 50, cmax = 100, umin = 15, n = 5
test 5: cmin = 50, cmax = 110, umin = 15, n = 5
test 6: cmin = 50, cmax = 120, umin = 15, n = 5
test 7: cmin = 50, cmax = 130, umin = 15, n = 5
test 8: cmin = 50, cmax = 140, umin = 15, n = 5
test 9: cmin = 50, cmax = 150, umin = 15, n = 5
test 10: cmin = 50, cmax = 160, umin = 15, n = 5
test 11: cmin = 50, cmax = 170, umin = 15, n = 5

test 12: cmin = 50, cmax = 180, umin = 15, n = 5
test 13: cmin = 50, cmax = 190, umin = 15, n = 5
test 14: cmin = 50, cmax = 200, umin = 15, n = 5
test 15: cmin = 50, cmax = 100, umin = 10, n = 5
test 16: cmin = 50, cmax = 100, umin = 11, n = 5
test 17: cmin = 50, cmax = 100, umin = 12, n = 5
test 18: cmin = 50, cmax = 100, umin = 13, n = 5
test 19: cmin = 50, cmax = 100, umin = 14, n = 5
test 20: cmin = 50, cmax = 100, umin = 15, n = 5
test 21: cmin = 50, cmax = 100, umin = 16, n = 5

test 22: cmin = 50, cmax = 100, umin = 17, n = 5
test 23: cmin = 50, cmax = 100, umin = 18, n = 5
test 24: cmin = 50, cmax = 100, umin = 19, n = 5
test 25: cmin = 50, cmax = 100, umin = 20, n = 5
test 26: cmin = 50, cmax = 100, umin = 15, n = 3
test 27: cmin = 50, cmax = 100, umin = 15, n = 4
test 28: cmin = 50, cmax = 100, umin = 15, n = 6
test 29: cmin = 50, cmax = 100, umin = 15, n = 7
test 30: cmin = 50, cmax = 100, umin = 15, n = 8
test 31: cmin = 50, cmax = 100, umin = 15, n = 9

test 32: cmin = 50, cmax = 100, umin = 15, n = 10
test 33: cmin = 50, cmax = 100, umin = 15, n = 11
test 34: cmin = 50, cmax = 100, umin = 15, n = 12
test 35: cmin = 50, cmax = 100, umin = 15, n = 13
test 36: cmin = 50, cmax = 100, umin = 15, n = 14
test 37: cmin = 50, cmax = 100, umin = 15, n = 15
test 38: c = 154, umin = 15, n = 15

test 39: cmin = 50, cmax = 76, umin = 11, n = 10
test 40: cmin = 50, cmax = 77, umin = 11, n = 10
test 41: cmin = 50, cmax = 78, umin = 11, n = 10
test 42: cmin = 50, cmax = 75, umin = 9, n = 10
test 43: cmin = 50, cmax = 75, umin = 10, n = 10
test 44: cmin = 50, cmax = 75, umin = 12, n = 10
test 45: cmin = 50, cmax = 75, umin = 13, n = 10

test 46: c = 154, umin = 10, n = 5
test 47: c = 154, umin = 13, n = 5
test 48: c = 154, umin = 16, n = 5
test 49: c = 154, umin = 19, n = 5
test 50: c = 154, umin = 22, n = 5
test 51: c = 154, umin = 25, n = 5
test 52: c = 154, umin = 28, n = 5
test 53: c = 154, umin = 31, n = 5
test 54: c = 154, umin = 34, n = 5
test 55: c = 154, umin = 37, n = 5
test 56: c = 154, umin = 40, n = 5

test 57: c = 70, umin = 15, n = 5
test 58: c = 80, umin = 15, n = 5
test 59: c = 90, umin = 15, n = 5
test 60: c = 100, umin = 15, n = 5
test 61: c = 110, umin = 15, n = 5
test 62: c = 120, umin = 15, n = 5
test 63: c = 130, umin = 15, n = 5
test 64: c = 140, umin = 15, n = 5
test 65: c = 150, umin = 15, n = 5
test 66: c = 160, umin = 15, n = 5
test 67: c = 170, umin = 15, n = 5

test 68: c = 180, umin = 15, n = 5
test 69: c = 190, umin = 15, n = 5
test 70: c = 200, umin = 15, n = 5
test 71: c = 154, umin = 15, n = 3
test 72: c = 154, umin = 15, n = 4
test 73: c = 154, umin = 15, n = 6
test 74: c = 154, umin = 15, n = 7
test 75: c = 154, umin = 15, n = 8
test 76: c = 154, umin = 15, n = 9
test 77: c = 154, umin = 15, n = 10
test 78: c = 154, umin = 15, n = 11

test 79: c = 154, umin = 15, n = 12
test 80: c = 154, umin = 15, n = 13
test 81: c = 154, umin = 15, n = 14
test 82: c = 154, umin = 15, n = 15
test 83: c = 154, umin = 15, n = 5
